void rotate(vector<vector<int>>& matrix) {

        int n = matrix.size();


        //method 1 - make a new matrix and put the 1st row to last col of new matrix
         vector < vector < int >> rotated(n, vector < int > (n, 0));
    for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
        rotated[j][n - i - 1] = matrix[i][j];
    }
    }
    return rotated;



        // method 2 --- s.c =o(1)

        // // first find the transpose and then reverese every row

        // // 1.transpose
        // for(int i =0;i<n;i++){
        //     for(int j =0;j<n;j++){
        //         if(j>i){
        //             swap(matrix[i][j],matrix[j][i]);
        //         }
        //     }
        // }

        // // reverse every row of the matrix

        // for(int i =0;i<n;i++){
        //     reverse(matrix[i].begin(),matrix[i].end());
        // }
        
    }

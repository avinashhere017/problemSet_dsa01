 vector<int> subarraySum(vector<int>arr, int n, long long s)
    {
        // // Your code here
        vector<int> v;
        
        //method 1 -- TLE
        
        
        // for(int i =0;i<n;i++){
        //     int sum =arr[i];
        //     if(sum==s){
        //         v.push_back(i+1);
        //         v.push_back(i+1);
        //         return v;
        //     }
        //     for(int j=i+1;j<n;j++){
        //         sum = sum +arr[j];
        //         if(sum ==s){
        //               v.push_back(i+1);
        //             v.push_back(j+1);
        //           return v;
               
                    
        //         }
                
        //     }
          
        // }
        // v.push_back(-1);
        // return v;
        
        
        
        // method 2
        int l=0,h=0;
        long long int currsum=0;
        while(h<n){
            if(s==0){
                v.push_back(-1);
        return v;
            }
             currsum += arr[h];
             while(currsum>s){
                currsum -= arr[l];
                l++;
            }
           
            if(currsum ==s){
                v.push_back(l+1);
                v.push_back(h+1);
                return v;
            }else{
                h++;
            }
           
        }
        v.push_back(-1);
        return v;
    }
